" BASIC CONFIGURATION

" enter the current millenium
set nocompatible

" enable syntax and plugins (for netrw)
syntax enable
filetype plugin on

set autoindent
set backspace=indent,eol,start
set background=light
set colorcolumn=79
set copyindent
set textwidth=79
set list
set listchars=tab:\|_,trail:Â·
set fillchars+=stl:\ ,stlnc:\
set guioptions-=T " toolbar
set guioptions-=rL " No scrollbars
set hidden
set history=1000
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set noerrorbells
set noswapfile
set nowrap
set number
set shiftround
set expandtab
set showmatch
set smartcase
set t_Co=256
set title
set undolevels=1000
set visualbell
set smarttab

" FILE SEARCH

" Search down into subfolders
" Provides tab-completion for all file-related tasks
set path+=**

" Ignore some common files
set wildignore=*.swp,*.bak,*.pyc,*.class,**/__pycache__/**,*/tmp/*,*.so,*.zip,*.orig,**/node_modules/**,**/eggs/**,**/venv/**

" Display all matching files when we tab complete
set wildmenu
set wildmode=longest,list,full

au GUIEnter * exe 'set fillchars= columns=86 guiheadroom=10'

" PYTHON STUFF
iabbrev 8pdb import pdb; pdb.set_trace()  # XXXXXXXXXX
let g:python_highlight_all = 1
let g:python_highlight_exceptions = 1
let g:python_highlight_numbers = 1
let g:python_highlight_spaces_as_errors = 1
au BufEnter * set tabstop=4
au BufEnter * set shiftwidth=4
au BufEnter *.zcml set filetype=xml
au BufEnter *.ftl set filetype=xml
au BufEnter *.txt set filetype=rst
au BufRead,BufNewFile *.nix set filetype=nix

" Instant Python constructors
nnoremap ,c 0f(3wyt)o<ESC>pV:s/\([a-z_]\+\),\?/self.\1 = \1<C-v><CR>/g<CR>ddV?def<CR>j

if has("gui_running")
   let s:uname = system("uname")
   if s:uname == "Darwin\n"
      set transparency=5
      set guifont=MesloLGS\ NF:h12
      try
      let focuslosttransparency=0
      let focuslosttransparency=20
      let stored_transp=&transparency
      au! FocusLost * let stored_transp=&transparency | let &transparency=focuslosttransparency
      au! FocusGained * let &transparency=stored_transp
      endtry
   endif
endif

au GUIEnter * colorscheme default
au GUIEnter * set lines=60
au BufEnter * highlight SpellErrors  guibg=Red guifg=Black
au BufEnter * highlight SpellBad term=reverse ctermbg=12 gui=underline guibg=LightRed
au BufEnter * highlight SpellCap term=reverse ctermbg=9 gui=underline guibg=LightBlue
au BufEnter * highlight SpellRare term=reverse ctermbg=13 gui=underline guibg=LightMagenta
au BufEnter * highlight SpellLocal term=underline ctermbg=11 gui=underline guibg=LightCyan

"autocmd BufWritePost *.py call Flake8()
"let g:PyFlakeOnWrite = 1
"let g:PyFlakeCheckers = 'pep8,mccabe,frosted'
"let g:PyFlakeSigns = 1
"let g:PyFlakeSignStart = 1
let g:PyFlakeMaxLineLength = 79
"let g:PyFlakeDisabledMessages = 'E226,E301'
"let g:PyFlakeDefaultComplexity=20
"autocmd BufWritePost *.js call JSLint()
let g:syntastic_javascript_checkers = ['jshint']
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_flake8_exec='~/.local/bin/flake8'

" EXPAND function

set cursorline
au! WinEnter * set cursorline
au! WinLeave * set nocursorline
au! FocusGained * set cursorline
au! FocusLost * set nocursorline

fun! Expand()
    wincmd p
    set columns+=87
    vsplit
endfun

fun! Reduce()
    set columns=86
    only
endfun

command! Sw83Exp call Expand()
command! Sw83Red call Reduce()
nnoremap <D-e> :Sw83Exp<cr>
nnoremap <D-r> :Sw83Red<cr>

" Automatically try to find the project root
function! <SID>AutoProjectRootCD()
  try
    if &ft != 'help'
      ProjectRootCD
    endif
  catch
    " Silently ignore invalid buffers
  endtry
endfunction

autocmd BufEnter * call <SID>AutoProjectRootCD()

" FILE BROWSING

let g:netrw_banner=0
let g:netrw_browse_slit=4
let g:netrw_altv=1
let g:netrw_liststyle=3

" Gutetags
let g:gutentags_add_default_project_roots = 0
"let g:gutentags_project_root = ['.git', '.hg', 'setup.py', 'package.json']
let g:gutentags_project_root=['.projectroot']
let g:gutentags_cache_dir = expand('~/.cache/vim/ctags/')
let g:gutentags_generate_on_new = 1
let g:gutentags_generate_on_missing = 1
let g:gutentags_generate_on_write = 1
let g:gutentags_generate_on_empty_buffer = 0
let g:gutentags_ctags_auto_set_tags = 1
let g:gutentags_ctags_extra_args = [
      \ '--tag-relative=yes',
      \ '--fields=+ailmnS',
      \ ]
let g:gutentags_ctags_exclude = [
      \ '*.git', '*.svg', '*.hg',
      \ '*/tests/*',
      \ 'build',
      \ 'dist',
      \ '*sites/*/files/*',
      \ 'bin',
      \ 'node_modules',
      \ 'bower_components',
      \ 'cache',
      \ 'compiled',
      \ 'docs',
      \ 'example',
      \ 'bundle',
      \ 'vendor',
      \ '*.md',
      \ '*-lock.json',
      \ '*.lock',
      \ '*bundle*.js',
      \ '*build*.js',
      \ '.*rc*',
      \ '*.json',
      \ '*.min.*',
      \ '*.map',
      \ '*.bak',
      \ '*.zip',
      \ '*.pyc',
      \ '*.class',
      \ '*.sln',
      \ '*.Master',
      \ '*.csproj',
      \ '*.tmp',
      \ '*.csproj.user',
      \ '*.cache',
      \ '*.pdb',
      \ 'tags*',
      \ 'cscope.*',
      \ '*.css',
      \ '*.less',
      \ '*.scss',
      \ '*.exe', '*.dll',
      \ '*.mp3', '*.ogg', '*.flac',
      \ '*.swp', '*.swo',
      \ '*.bmp', '*.gif', '*.ico', '*.jpg', '*.png',
      \ '*.rar', '*.zip', '*.tar', '*.tar.gz', '*.tar.xz', '*.tar.bz2',
      \ '*.pdf', '*.doc', '*.docx', '*.ppt', '*.pptx',
      \ ]
"let g:gutentags_add_default_project_roots=0

" PLUGINS

filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
"Bundle 'phleet/vim-mercenary'
"Bundle 'tpope/vim-fugitive'
"Bundle 'Lokaltog/vim-easymotion'
"Bundle 'nvie/vim-flake8'
"Bundle 'andviro/flake8-vim'
Plugin 'vim-syntastic/syntastic'
"Plugin 'ycm-core/YouCompleteMe'
"Bundle 'kien/ctrlp.vim'
"Bundle 'scrooloose/nerdtree'
"Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Plugin 'dbakker/vim-projectroot'
Plugin 'vim-airline/vim-airline'
Plugin 'ludovicchabant/vim-gutentags'
Plugin 'psf/black'
Plugin 'mileszs/ack.vim'
Plugin 'rizzatti/dash.vim'
Plugin 'github/copilot.vim'
"Plugin 'neoclide/coc.nvim', {'pinned': 1}
"Bundle 'xolox/vim-misc'
"Bundle 'xolox/vim-easytags'
"Bundle 'pangloss/vim-javascript'
call vundle#end() 
filetype plugin indent on

command! E Explore

" Change indent continuously
vmap < <gv
vmap > >gv
